import java.io.*;import java.util.*;public class Main {static int N;static int m = 0;static int mv = 1;static Node[] a;static boolean[] v;static StringTokenizer st;	static class Node {	int v;	int w;	Node l;		public Node(int v, int w, Node l) {	super();this.v = v;this.w = w;this.l = l;}}	public static void main(String[] args) throws IOException {	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));N = Integer.parseInt(br.readLine());a = new Node[N + 1];v = new boolean[N + 1];for (int i = 1; i < N; i++) {st = new StringTokenizer(br.readLine());int s = Integer.parseInt(st.nextToken());int e = Integer.parseInt(st.nextToken());	int w = Integer.parseInt(st.nextToken());a[s] = new Node(e, w, a[s]);a[e] = new Node(s, w, a[e]);}d(1, 0);v= new boolean[N+1];d(mv, 0);System.out.println(m);}static void d(int vertex, int dist) {v[vertex] = true;for (Node temp = a[vertex]; temp != null; temp = temp.l) {if (!v[temp.v]) {d(temp.v, dist + temp.w);}}if (m < dist) {m = dist;mv = vertex;}}}